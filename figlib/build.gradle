plugins {
    id 'com.android.library'
    id 'com.vanniktech.android.junit.jacoco'
    id 'maven-publish'
}

android {
    compileSdkVersion theCompileSdkVersion
    buildToolsVersion theBuildToolsVersion

    defaultConfig {
        minSdkVersion theMinSdkVersion
        targetSdkVersion theTargetSdkVersion
        testApplicationId "com.halfhp.fig.test"
    }
}

group = 'com.halfhp.fig'
version = theVersionName

dependencies {
    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:3.9.0"
    testImplementation "org.robolectric:robolectric:4.5.1"

    // temp fix for:
    // https://github.com/robolectric/robolectric/issues/1932
    testImplementation 'org.khronos:opengl-api:gl1.1-android-2.1_r1'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
    options {
        links "http://docs.oracle.com/javase/7/docs/api/"
        linksOffline "http://d.android.com/reference","${android.sdkDirectory}/docs/reference"
    }
    exclude '**/BuildConfig.java'
    exclude '**/R.java'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

javadoc {
    options.overview = "src/main/java/overview.html"
}

afterEvaluate {
    publishing {
        repositories {
            maven {
                name = "Maven Central"
                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                credentials {
                    username = System.getenv("OSSRH_ACTOR")
                    password = System.getenv("OSSRH_TOKEN")
                }
            }
//            maven {
//                name = "GitHubPackages"
//                url = "https://maven.pkg.github.com/halfhp/fig"
//                credentials {
//                    username = System.getenv("GITHUB_ACTOR")
//                    password = System.getenv("GITHUB_TOKEN")
//                }
//            }
        }
        publications {
            release(MavenPublication) {
                pom {
                    packaging 'aar'
                    name 'Fig'
                    description = "Configure any object from XML."
                    url gitUrl
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id 'halfhp'
                            name 'Nick Fellows'
                            email 'halfhp@gmail.com'
                        }
                    }
                    scm {
                        connection gitUrl
                        developerConnection gitUrl
                        url gitUrl

                    }
                }

                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = 'com.halfhp.fig'
                artifactId = 'figlib'
                version = theVersionName
            }
        }
    }
}

artifacts {
    archives javadocJar
    archives sourcesJar
}